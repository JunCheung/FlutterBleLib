// Mocks generated by Mockito 5.0.4 from annotations
// in flutter_ble_lib/example/ios/.symlinks/plugins/flutter_ble_lib/test/scan_result.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:flutter_ble_lib/flutter_ble_lib.dart' as _i2;
import 'package:flutter_ble_lib/src/_managers_for_classes.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeCharacteristicWithValue extends _i1.Fake
    implements _i2.CharacteristicWithValue {}

class _FakeCharacteristic extends _i1.Fake implements _i2.Characteristic {}

class _FakeDescriptorWithValue extends _i1.Fake
    implements _i2.DescriptorWithValue {}

class _FakeDescriptor extends _i1.Fake implements _i2.Descriptor {}

/// A class which mocks [ManagerForPeripheral].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerForPeripheral extends _i1.Mock
    implements _i3.ManagerForPeripheral {
  MockManagerForPeripheral() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> connectToPeripheral(String? peripheralIdentifier,
          {bool? isAutoConnect,
          int? requestMtu,
          bool? refreshGatt,
          Duration? timeout}) =>
      (super.noSuchMethod(
          Invocation.method(#connectToPeripheral, [
            peripheralIdentifier
          ], {
            #isAutoConnect: isAutoConnect,
            #requestMtu: requestMtu,
            #refreshGatt: refreshGatt,
            #timeout: timeout
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<bool> isPeripheralConnected(String? peripheralIdentifier) =>
      (super.noSuchMethod(
          Invocation.method(#isPeripheralConnected, [peripheralIdentifier]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<void> disconnectOrCancelPeripheralConnection(
          String? peripheralIdentifier) =>
      (super.noSuchMethod(
          Invocation.method(
              #disconnectOrCancelPeripheralConnection, [peripheralIdentifier]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Stream<_i2.PeripheralConnectionState> observePeripheralConnectionState(
          String? peripheralIdentifier,
          bool? emitCurrentValue,
          bool? completeOnDisconnect) =>
      (super.noSuchMethod(
              Invocation.method(#observePeripheralConnectionState, [
                peripheralIdentifier,
                emitCurrentValue,
                completeOnDisconnect
              ]),
              returnValue: Stream<_i2.PeripheralConnectionState>.empty())
          as _i4.Stream<_i2.PeripheralConnectionState>);
  @override
  _i4.Future<void> discoverAllServicesAndCharacteristics(
          _i2.Peripheral? peripheral, String? transactionId) =>
      (super.noSuchMethod(
          Invocation.method(#discoverAllServicesAndCharacteristics,
              [peripheral, transactionId]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.Service>> services(_i2.Peripheral? peripheral) =>
      (super.noSuchMethod(Invocation.method(#services, [peripheral]),
              returnValue: Future<List<_i2.Service>>.value(<_i2.Service>[]))
          as _i4.Future<List<_i2.Service>>);
  @override
  _i4.Future<List<_i2.Characteristic>> characteristics(
          _i2.Peripheral? peripheral, String? serviceUuid) =>
      (super.noSuchMethod(
          Invocation.method(#characteristics, [peripheral, serviceUuid]),
          returnValue: Future<List<_i2.Characteristic>>.value(
              <_i2.Characteristic>[])) as _i4.Future<List<_i2.Characteristic>>);
  @override
  _i4.Future<int> rssi(_i2.Peripheral? peripheral, String? transactionId) =>
      (super.noSuchMethod(Invocation.method(#rssi, [peripheral, transactionId]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> requestMtu(
          _i2.Peripheral? peripheral, int? mtu, String? transactionId) =>
      (super.noSuchMethod(
          Invocation.method(#requestMtu, [peripheral, mtu, transactionId]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<_i2.CharacteristicWithValue> readCharacteristicForDevice(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid,
          String? transactionId) =>
      (super.noSuchMethod(
              Invocation.method(#readCharacteristicForDevice,
                  [peripheral, serviceUuid, characteristicUuid, transactionId]),
              returnValue: Future<_i2.CharacteristicWithValue>.value(
                  _FakeCharacteristicWithValue()))
          as _i4.Future<_i2.CharacteristicWithValue>);
  @override
  _i4.Future<_i2.Characteristic> writeCharacteristicForDevice(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid,
          _i5.Uint8List? value,
          bool? withResponse,
          String? transactionId) =>
      (super.noSuchMethod(
              Invocation.method(#writeCharacteristicForDevice, [
                peripheral,
                serviceUuid,
                characteristicUuid,
                value,
                withResponse,
                transactionId
              ]),
              returnValue:
                  Future<_i2.Characteristic>.value(_FakeCharacteristic()))
          as _i4.Future<_i2.Characteristic>);
  @override
  _i4.Stream<_i2.CharacteristicWithValue> monitorCharacteristicForDevice(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid,
          String? transactionId) =>
      (super.noSuchMethod(
              Invocation.method(#monitorCharacteristicForDevice,
                  [peripheral, serviceUuid, characteristicUuid, transactionId]),
              returnValue: Stream<_i2.CharacteristicWithValue>.empty())
          as _i4.Stream<_i2.CharacteristicWithValue>);
  @override
  _i4.Future<List<_i2.Descriptor>> descriptorsForPeripheral(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid) =>
      (super.noSuchMethod(
              Invocation.method(#descriptorsForPeripheral,
                  [peripheral, serviceUuid, characteristicUuid]),
              returnValue:
                  Future<List<_i2.Descriptor>>.value(<_i2.Descriptor>[]))
          as _i4.Future<List<_i2.Descriptor>>);
  @override
  _i4.Future<_i2.DescriptorWithValue> readDescriptorForPeripheral(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid,
          String? descriptorUuid,
          String? transactionId) =>
      (super.noSuchMethod(
              Invocation.method(#readDescriptorForPeripheral, [
                peripheral,
                serviceUuid,
                characteristicUuid,
                descriptorUuid,
                transactionId
              ]),
              returnValue: Future<_i2.DescriptorWithValue>.value(
                  _FakeDescriptorWithValue()))
          as _i4.Future<_i2.DescriptorWithValue>);
  @override
  _i4.Future<_i2.Descriptor> writeDescriptorForPeripheral(
          _i2.Peripheral? peripheral,
          String? serviceUuid,
          String? characteristicUuid,
          String? descriptorUuid,
          _i5.Uint8List? value,
          String? transactionId) =>
      (super.noSuchMethod(
              Invocation.method(#writeDescriptorForPeripheral, [
                peripheral,
                serviceUuid,
                characteristicUuid,
                descriptorUuid,
                value,
                transactionId
              ]),
              returnValue: Future<_i2.Descriptor>.value(_FakeDescriptor()))
          as _i4.Future<_i2.Descriptor>);
}
