package hu.privatdoktor.flutter_ble_lib

 object ArgumentKey {
    const val RESTORE_STATE_IDENTIFIER = "restoreStateIdentifier"
    const val SCAN_MODE = "scanMode"
    const val CALLBACK_TYPE = "callbackType"
    const val UUIDS = "uuids"
    const val DEVICE_IDENTIFIER = "deviceIdentifier"
    const val IS_AUTO_CONNECT = "isAutoConnect"
    const val REQUEST_MTU = "requestMtu"
    const val REFRESH_GATT = "refreshGatt"
    const val TIMEOUT_MILLIS = "timeout"
    const val EMIT_CURRENT_VALUE = "emitCurrentValue"
    const val LOG_LEVEL = "logLevel"
    const val SERVICE_UUID = "serviceUuid"
    const val SERVICE_UUIDS = "serviceUuids"
    const val CHARACTERISTIC_UUID = "characteristicUuid"
    const val CHARACTERISTIC_UUIDS = "characteristicUuids"
    const val DESCRIPTOR_UUID = "descriptorUuid"
    const val VALUE = "value"
    const val WITH_RESPONSE = "withResponse"
    const val MTU = "mtu"
    const val DEVICE_IDENTIFIERS = "deviceIdentifiers"
 }

object ChannelName {
    const val FLUTTER_BLE_LIB = "flutter_ble_lib"
    const val ADAPTER_STATE_CHANGES = FLUTTER_BLE_LIB + "/stateChanges"
    const val STATE_RESTORE_EVENTS = FLUTTER_BLE_LIB + "/stateRestoreEvents"
    const val SCANNING_EVENTS = FLUTTER_BLE_LIB + "/scanningEvents"
    const val CONNECTION_STATE_CHANGE_EVENTS = FLUTTER_BLE_LIB + "/connectionStateChangeEvents"
    const val MONITOR_CHARACTERISTIC = FLUTTER_BLE_LIB + "/monitorCharacteristic"
}

object MethodName {
    const val IS_CLIENT_CREATED = "isClientCreated"
    const val CREATE_CLIENT = "createClient"
    const val DESTROY_CLIENT = "destroyClient"
    const val GET_STATE = "getState"
    const val GET_AUTHORIZATION = "getAuthorization"
    const val ENABLE_RADIO = "enableRadio"
    const val DISABLE_RADIO = "disableRadio"
    const val START_DEVICE_SCAN = "startDeviceScan"
    const val STOP_DEVICE_SCAN = "stopDeviceScan"
    const val CONNECT_TO_DEVICE = "connectToDevice"
    const val CREATE_BOND_WITH_DEVICE = "createBondWithDevice"
    const val REMOVE_BOND_FROM_DEVICE = "removeBondFromDevice"
    const val ENSURE_BONDED_WITH_DEVICE = "ensureBondedWithDevice"
    const val IS_DEVICE_CONNECTED = "isDeviceConnected"
    const val OBSERVE_CONNECTION_STATE = "observeConnectionState"
    const val CANCEL_CONNECTION = "cancelConnection"
    const val DISCOVER_SERVICES = "discoverServices"
    const val DISCOVER_CHARACTERISTICS = "discoverCharacteristics"
    const val GET_SERVICES = "services"
    const val GET_CHARACTERISTICS = "characteristics"
    const val GET_DESCRIPTORS_FOR_DEVICE = "descriptorsForDevice"
    const val RSSI = "rssi"
    const val REQUEST_MTU = "requestMtu"
    const val GET_CONNECTED_DEVICES = "getConnectedDevices"
    const val GET_KNOWN_DEVICES = "getKnownDevices"
    const val READ_CHARACTERISTIC_FOR_DEVICE = "readCharacteristicForDevice"
    const val WRITE_CHARACTERISTIC_FOR_DEVICE = "writeCharacteristicForDevice"
    const val MONITOR_CHARACTERISTIC_FOR_DEVICE = "monitorCharacteristicForDevice"
    const val READ_DESCRIPTOR_FOR_DEVICE = "readDescriptorForDevice"
    const val WRITE_DESCRIPTOR_FOR_DEVICE = "writeDescriptorForDevice"
}

